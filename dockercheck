#!/usr/bin/python3

import os
import logging
import threading
import cherrypy
import docker
from prometheus_client import start_http_server, Enum

try:
    LISTEN_PORT = int(os.environ.get("DOCKERCHECK_HTTP_PORT","8080"))
except:
    logging.error("DOCKERCHECK_HTTP_PORT must be an integer value")
    exit(2)

try:
    PROM_LISTEN_PORT = int(os.environ.get("DOCKERCHECK_PROM_HTTP_PORT","9150"))
except:
    logging.error("DOCKERCHECK_PROM_HTTP_PORT must be an integer value")
    exit(2)

DOCKER_LABEL = os.environ.get("DOCKERCHECK_LABEL","com.docker.compose.project")
METRIC_NAME  = os.environ.get("DOCKERCHECK_PROM_METRIC",'container_status')

prom_container_status = Enum(METRIC_NAME, 'Returns the status of a Compose project container',
        states=['restarting', 'running', 'paused', 'exited'], labelnames=["name", "role"])



def check_containers_status(client, filter_label):
    '''
    Check the containers statuses and export metrics

    Iterates over a list of containers in *any* state and filtering on `filter_label`
    '''
    containers = client.containers.list(all=True,
                                        filters={"label": filter_label})
    if not containers:
        return(500)

    http_status=200
    for container in containers:
        prom_container_status.labels(container.name,container.labels[DOCKER_LABEL]).state(container.status)
        if container.status != "running":
            http_status=500
        try:
            if container.attrs["State"]["Health"]["Status"] == "healthy":
                http_status=500
        except KeyError:
            pass
    return(http_status)


class HealthCheck(object):
    @cherrypy.expose
    def health(self):
        try:
            client = docker.from_env()
        except:
            cherrypy.log.error(msg="Cannot connect to docker daemon")
            cherrypy.response.status = 500
            return
        cherrypy.response.status = check_containers_status(client, DOCKER_LABEL)
        client.close()

if __name__ == '__main__':
    start_http_server(PROM_LISTEN_PORT) # prometheus
    cherrypy.config.update({'server.socket_port': LISTEN_PORT})
    cherrypy.config.update({'server.socket_host': '0.0.0.0'})
    cherrypy.quickstart(HealthCheck(),'/')
